/* author: daniel@vassy.info */
/* Generated by AceHTML Freeware http://freeware.acehtml.com */
/* Creation date: 05/08/2009 */


// functions to implement context-menu clicks

var child;
var interval;

function striptrailingslash(s)
{
	if (s.charAt(s.length -1) == '/')
		return s.slice(0, s.length -1)
	
	return s;
}

function action(what, isfolder)
{
	var myWidth = 0, myHeight = 0;
	if( typeof( window.innerWidth ) == 'number' )
	{
    	//Non-IE
    	myWidth = window.innerWidth;
    	myHeight = window.innerHeight;
	}
	else if( document.documentElement && ( document.documentElement.clientWidth || document.documentElement.clientHeight ) )
	{
    	//IE 6+ in 'standards compliant mode'
    	myWidth = document.documentElement.clientWidth;
    	myHeight = document.documentElement.clientHeight;
  	}
	else if( document.body && ( document.body.clientWidth || document.body.clientHeight ) )
	{
    	//IE 4 compatible
    	myWidth = document.body.clientWidth;
    	myHeight = document.body.clientHeight;
	}
	
	newHeight = Math.round(myHeight * 0.70);
	
	action_path = striptrailingslash(action_dir)
	if (action_file.length)
		action_path += '/' + action_file;
		
	switch (what)
	{
		case 'browse':
			// as if user had done a regular click
			window.location.href = self + "?dir=" + action_path;
			break;
		
		case 'download':
			// as if user had done a regular click
			window.location.href = self + "?fname=" + action_path;
			break;
			
		case 'delete':
		case 'filemove':
		case 'filecopy':
		case 'rename':
		case 'newdir':
		case 'chmod':
			child = window.open(self + "?dir=" + dir + '&' + what + '=' + action_path, "_blank" , 
				"dependent=yes," +
				"width=800," +
				"height=" + newHeight + "," +
				"left=100," +
				"location=yes," +
				"menubar=yes," +
				"resizable=no," +
				"scrollbars=yes," +
				"status=no," +
				"toolbar=no," +
				"top=100");
			monitorchild();
			break;
	}
}

// called from daughter window

function cancel()
{
	window.close();
}

function execute(what)
{
	// var dir		= document.getElementById('dir').value;
	var path	= document.getElementById('path').value;

	window.location.href = self + "?execute&dir=" + dir + what + "&target=" + path;
}


function childisdone()
{
	// do here all you want to do after the child has exited
	newdir = document.getElementById('newdir');
	window.location.href = self + "?dir=" + newdir.value;
	show();
}

function checkchild()
{
	if (!child.closed)
		return;
	
	clearInterval(interval);
	childisdone();
}

function monitorchild()
{
	// do here all you want to do before waiting for the child
	
	hide();
	interval = setInterval("checkchild()", 200);
}

function hide()
{
	document.getElementById("screen").style.display='block';
	return false
}

function show()
{
	document.getElementById("screen").style.display='none';
	return false
}

function parentisdone()
{
	window.close();
}

function checkparent()
{
	if (window.opener && !window.opener.closed)
		return;
	
	clearInterval(interval);
	parentisdone();
}

function monitorparent()
{
	interval = setInterval("checkparent()", 200);
}